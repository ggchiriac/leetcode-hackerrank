{"id":610833486,"lang":"python3","time":"7 months, 1 week","timestamp":1641045736,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/610833486/","is_pending":"Not Pending","title":"Decode Ways","memory":"14.6 MB","code":"class Solution:\n    def numDecodings(self, s: str) -> int:\n        num = {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"}\n        \n        def clean(s: str) -> str:\n            st = []\n            for char in s:\n                st.append(char)\n                if st[-1] == \"0\":\n                    if len(st) == 1:\n                        return \"-1\"\n                    elif st[-2] not in {\"1\", \"2\"}:\n                        return \"-1\"\n                    else:\n                        st.pop()\n                        st.pop()\n                        st.append(\"0\")\n            return ''.join(st)\n\n        @lru_cache(maxsize=None)\n        def recurse(s, i) -> int:\n            \n            if i == 0:\n                return 1\n            elif i == 1:\n                if (s[i-1] == \"2\" and s[i] in num) or (s[i-1] == \"1\" and s[i] != \"0\"):\n                    return 2\n                else:\n                    return 1\n            \n            if (int(s[i-1]) == 2 and int(s[i]) > 6) or int(s[i-1]) > 2 or s[i] == \"0\" or int(s[i-1]) == 0:\n                return recurse(s, i - 1)\n            elif int(s[i-2]) > 2 or int(s[i-2]) == 0:\n                return 2 * recurse(s, i - 1)\n            else:\n                return recurse(s, i - 2) + recurse(s, i - 1)\n        \n        c = clean(s)\n        if c == \"-1\":\n            return 0\n        return recurse(c, len(c) - 1)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways"}