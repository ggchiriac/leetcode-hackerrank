{"id":595940827,"lang":"python3","time":"8 months, 1 week","timestamp":1638455338,"status_display":"Accepted","runtime":"5576 ms","url":"/submissions/detail/595940827/","is_pending":"Not Pending","title":"Design HashMap","memory":"62.8 MB","code":"      \nclass Bucket:\n    def __init__(self):\n        self.bucket = []\n    \n    def update(self, key, value):\n        found = False\n        for i, k in enumerate(self.bucket):\n            if key == k[0]:\n                self.bucket[i] = [key, value]\n                found = True\n                break\n        if not found:\n            self.bucket.append([key, value])\n                \n    def get(self, key):\n        for k in self.bucket:\n            if k[0] == key:\n                return k[1]\n        return -1\n\n    def remove(self, key):\n        for i, k in enumerate(self.bucket):\n            if key == k[0]:\n                del self.bucket[i]\n\nclass MyHashMap:\n\n    def __init__(self):\n        self.maxLen = 100000\n        self.hTable = [Bucket() for i in range(self.maxLen)]\n\n    def put(self, key: int, value: int) -> None:\n        index = key % self.maxLen\n        self.hTable[index].update(key, value)\n        \n    def get(self, key: int) -> int:\n        index = key % self.maxLen\n        return self.hTable[index].get(key)\n\n    def remove(self, key: int) -> None:\n        index = key % self.maxLen\n        self.hTable[index].remove(key)\n\n\n# Your MyHashMap object will be instantiated and called as such:\n# obj = MyHashMap()\n# obj.put(key,value)\n# param_2 = obj.get(key)\n# obj.remove(key)","compare_result":"111111111111111111111111111111111111","title_slug":"design-hashmap"}