{"id":578288451,"lang":"python3","time":"9 months, 2 weeks","timestamp":1635384137,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/578288451/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:\n        if root is None:\n            return []\n        pre = None\n        stack, output = [], []\n        \n        while root is not None or stack:\n            if root is not None:\n                stack.append(root)\n                root = root.left\n            else:\n                root = stack[-1]\n                if root.right is None or root.right is pre:\n                    output.append(root.val)\n                    stack.pop()\n                    pre = root\n                    root = None\n                else:\n                    root = root.right\n            \n        return output\n                    \n                \n                \n                \n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal"}