{"id":609854506,"lang":"python3","time":"7 months, 1 week","timestamp":1640880773,"status_display":"Accepted","runtime":"163 ms","url":"/submissions/detail/609854506/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"21.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -> int:\n        def max_gain(node):\n            nonlocal maxSum\n            if not node:\n                return 0\n            \n            left_gain = max(max_gain(node.left), 0)\n            right_gain = max(max_gain(node.right), 0)\n            price_newpath = node.val + left_gain + right_gain\n            \n            maxSum = max(maxSum, price_newpath)\n            \n            return node.val + max(left_gain, right_gain)\n        \n        maxSum = -math.inf\n        max_gain(root)\n        return maxSum","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}