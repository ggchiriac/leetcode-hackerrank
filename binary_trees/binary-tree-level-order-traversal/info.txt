{"id":578320316,"lang":"python3","time":"9 months, 2 weeks","timestamp":1635389017,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/578320316/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        if root is None:\n            return None\n        queue, output = [root], [[root.val]]\n        level = []\n        count1 = 1\n        count2 = 0\n        while queue:\n            root = queue.pop(0)\n            count1 -= 1\n            if root.left is not None:\n                level.append(root.left.val)\n                queue.append(root.left)\n                count2 += 1\n            if root.right is not None:\n                level.append(root.right.val)\n                queue.append(root.right)\n                count2 += 1\n            if count1 is 0:\n                count1 = count2\n                count2 = 0\n                if level:\n                    output.append(level)\n                level = []\n        return output\n            \n            \n        ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}