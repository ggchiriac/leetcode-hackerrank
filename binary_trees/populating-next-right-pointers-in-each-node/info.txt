{"id":588801982,"lang":"python3","time":"8 months, 3 weeks","timestamp":1637192300,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/588801982/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"15.7 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.next = next\n\"\"\"\n\nclass Solution:\n    def connect(self, root: 'Node') -> 'Node':\n        def bfs(root: 'Node'):\n            if root is None:\n                return\n            queue = [root]\n            i = 1\n            k = 0\n            past_node = Node()\n\n            while len(queue) > 0:\n                cur_node = queue.pop(0)\n                past_node.next = cur_node\n                if i == 2**k + 1:\n                    k += 1\n                    past_node.next = None\n                    i = 1\n                past_node = cur_node\n                i += 1\n\n                if cur_node.left is not None:\n                    queue.append(cur_node.left)\n\n                if cur_node.right is not None:\n                    queue.append(cur_node.right)\n                    \n        bfs(root)\n        return root","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node"}