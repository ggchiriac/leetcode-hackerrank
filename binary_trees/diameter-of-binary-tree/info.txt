{"id":610397380,"lang":"python3","time":"7 months, 1 week","timestamp":1640961997,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/610397380/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        def maxPath(node: Optional[TreeNode]) -> int:\n            nonlocal lMax\n            if node.left is None and node.right is None:\n                return 0\n            if node.left is not None:\n                leftGain = 1 + maxPath(node.left)\n            else:\n                leftGain = 0\n            if node.right is not None:\n                rightGain = 1 + maxPath(node.right)\n            else:\n                rightGain = 0\n            lMax = max(lMax, leftGain + rightGain)\n            return max(leftGain, rightGain)\n            \n        lMax = 0\n        maxPath(root)\n        return lMax\n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}