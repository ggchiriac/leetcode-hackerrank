{"id":576551498,"lang":"python3","time":"9 months, 2 weeks","timestamp":1635106837,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/576551498/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"17.7 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        cur1 = head\n        cur2 = head\n        while (cur2 is not None):\n            cur1 = cur1.next\n            cur2 = cur2.next\n            if cur2 is None: return False\n            cur2 = cur2.next\n            if cur1 == cur2: return True\n        return False","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}