{"id":576568399,"lang":"python3","time":"9 months, 2 weeks","timestamp":1635109224,"status_display":"Accepted","runtime":"2011 ms","url":"/submissions/detail/576568399/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"17.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head: ListNode) -> ListNode:\n        cur = head\n        if cur is None: return None\n        nodes = []\n        nodes.append(cur)\n        while cur is not None:\n            cur = cur.next\n            if cur is None: return None\n            for node in nodes:\n                if node is cur: return cur\n            nodes.append(cur)\n            \n        return None\n        ","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}