{"id":609268010,"lang":"python3","time":"7 months, 1 week","timestamp":1640801056,"status_display":"Accepted","runtime":"6721 ms","url":"/submissions/detail/609268010/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"17.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        start = None\n        min = math.inf\n        iMin = -1\n        ok = 0\n        for i in range(len(lists)):\n            if lists[i] is not None:\n                ok = 1\n                if lists[i].val < min:\n                    min = lists[i].val\n                    iMin = i\n        if ok == 1:\n            start = lists[iMin]\n            lists[iMin] = lists[iMin].next\n            cur = start\n        while True:\n            ok = 0\n            min = math.inf\n            iMin = -1\n            for i in range(len(lists)):\n                if lists[i] is not None:\n                    ok = 1\n                    if lists[i].val < min:\n                        min = lists[i].val\n                        iMin = i\n            if ok == 0:\n                break\n            cur.next = lists[iMin]\n            cur = cur.next\n            lists[iMin] = lists[iMin].next\n            if lists[iMin] is None:\n                lists.pop(iMin)\n        return start","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}