{"id":577254606,"lang":"python3","time":"9 months, 2 weeks","timestamp":1635216102,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/577254606/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"15.6 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        node = head\n        if head is None:\n            return None\n        nodes = []\n        length = 0\n        while node is not None:\n            nodes.append(node)\n            node = node.next\n            length += 1\n        for i in range(length - 1):\n            nodes[length - i - 1].next = nodes[length - i - 2]\n        nodes[0].next = None\n        head = nodes[length - 1]\n        return head\n        \n            \n        ","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}